<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rU2fw3vPBZecZe2l79h/9h7xw37UavqG43+P8e6Tr6SmhtN3XADbD0vOsubTd7b/8G8HbZg791+w5CQ6
        Sd/wBOjKYbNfp5/0HfvP8th/Cdlw1uktfcf+49Fz2G/QZ/rG9x/BfzGXtX5L3abvpB4AcNLvpPP0nV0A
        lkWvF4DdrztEvzuJ9F1/DwA8eorfj1D6po/9Z1E8C/1kWuk7uwDssGzxAqD4GSmm7xbP/7Sw/9glyjGf
        g276JvL+48WTez7S6btoFwDFl0H6g8UDgPshHgDY55B8bsiB9F+yeABQ+w+ASb8M0k9V339IvwzSX63i
        BUD6ZZD+JlX2H9Ivg/RPUP74J/0ySH8rJS8A0i+D9HdgF8DV209zXwCkXwbp7yz38U/6ZZD+PrLuP6Rf
        BunvL9MFQPplkP5UXv+MFwDpl0H685jx+Cf9Mkh/NnPtP6RfBunPbPoToKRfBulnMeX4J/0ySD+Xvfcf
        0i+D9PPaY/8h/TJIv4SdLgDSL4P0y9ly/yH9Mki/qG0eAJB+GaRfweb9h/TLIP1q1l0ApF8G6Vf26v5D
        +mWQfn3JAwDSL4P0o/ALwF9bM3kXciB9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9
        iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9
        iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9
        iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCJ9iCL9vM5cPDp9/ih544nsJnbD5I2Y07mH/wHDzLMXdM+SmAAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>