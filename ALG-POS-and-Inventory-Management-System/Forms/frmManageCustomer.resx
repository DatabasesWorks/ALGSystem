<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>